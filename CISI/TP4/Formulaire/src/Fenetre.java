/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.*;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.ListModel;

/**
 *
 * @author arnaud
 */
public class Fenetre extends javax.swing.JFrame {

    private void activation() {
        switch (state) {
            case EMPTY:
                bAdd.setEnabled(true);
                bDelete.setEnabled(false);
                bRestore.setEnabled(false);
                bReplace.setEnabled(false);
                lAt.setEnabled(false);
                break;
            case VIEW:
                bAdd.setEnabled(true);
                bDelete.setEnabled(true);
                bRestore.setEnabled(false);
                bReplace.setEnabled(false);
                lAt.setEnabled(true);
                break;
            case CHANGE:
                bAdd.setEnabled(true);
                bDelete.setEnabled(false);
                bRestore.setEnabled(true);
                bReplace.setEnabled(true);
                lAt.setEnabled(false);
                break;
        }
    }

    private boolean correct() {
        boolean ret = true;
        if (textFieldAtX.getText().length() == 0) {
            ret = false;
        }
        return ret;
    }

    private void add() {
        Element e = new Element(textFieldAtX.getText(), AtY.getSelection().getActionCommand(), checkBoxAtZ.isSelected());
        listElement.add(e);
        DefaultListModel<String> model = new DefaultListModel<String>();
        for (Element i : listElement) {
            model.addElement(i.getX());
        }
        lAt.setModel(model);
    }

    private void delete() {

    }

    private void replace(int i) {

    }

    private void getElement(int i) {

    }

    private void selectElement() {

    }

    private enum STATE {

        EMPTY, VIEW, CHANGE
    };
    private STATE state;
    private int nbElement;
    private boolean correct;
    private List<Element> listElement;
    private Element selectedElement;
    private int selectedI;

    /**
     * Creates new form Fenetre
     */
    public Fenetre() {
        initComponents();
        state = STATE.EMPTY;
        activation();
        nbElement = 0;
        correct = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AtY = new javax.swing.ButtonGroup();
        lblAtX = new javax.swing.JLabel();
        textFieldAtX = new javax.swing.JTextField();
        lblAtY = new javax.swing.JLabel();
        radioAtY1 = new javax.swing.JRadioButton();
        lblAtZ = new javax.swing.JLabel();
        checkBoxAtZ = new javax.swing.JCheckBox();
        bAdd = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        bRestore = new javax.swing.JButton();
        bReplace = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lAt = new javax.swing.JList();
        radioAtY2 = new javax.swing.JRadioButton();
        radioAty3 = new javax.swing.JRadioButton();
        lbl1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblAtX.setText("Attribute X");

        textFieldAtX.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                textFieldAtXInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        textFieldAtX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textFieldAtXKeyPressed(evt);
            }
        });

        lblAtY.setText("Attribute Y");

        AtY.add(radioAtY1);
        radioAtY1.setSelected(true);
        radioAtY1.setText("01");
        radioAtY1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioAtY1MouseClicked(evt);
            }
        });

        lblAtZ.setText("Attribute Z");

        checkBoxAtZ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkBoxAtZMouseClicked(evt);
            }
        });

        bAdd.setText("Add");
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        bDelete.setText("Delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        bRestore.setText("Restore");
        bRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRestoreActionPerformed(evt);
            }
        });

        bReplace.setText("Replace");
        bReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReplaceActionPerformed(evt);
            }
        });

        lAt.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "a", "e", "e", "z" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lAt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lAtMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lAt);

        AtY.add(radioAtY2);
        radioAtY2.setText("02");
        radioAtY2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioAtY2MouseClicked(evt);
            }
        });

        AtY.add(radioAty3);
        radioAty3.setText("03");
        radioAty3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioAty3MouseClicked(evt);
            }
        });

        lbl1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(bReplace))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(bRestore))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAtZ)
                                .addGap(18, 18, 18)
                                .addComponent(checkBoxAtZ)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAtX)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldAtX, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAtY)
                                .addGap(18, 18, 18)
                                .addComponent(radioAtY1)
                                .addGap(18, 18, 18)
                                .addComponent(radioAtY2)
                                .addGap(18, 18, 18)
                                .addComponent(radioAty3)
                                .addGap(71, 71, 71)
                                .addComponent(lbl1)))
                        .addGap(0, 85, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAtX)
                    .addComponent(textFieldAtX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAtY)
                            .addComponent(radioAtY1)
                            .addComponent(radioAtY2)
                            .addComponent(radioAty3))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbl1)
                        .addGap(6, 6, 6)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAtZ)
                    .addComponent(checkBoxAtZ))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bRestore)
                            .addComponent(bAdd))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bReplace)
                            .addComponent(bDelete))
                        .addGap(51, 51, 51))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldAtXInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_textFieldAtXInputMethodTextChanged
        switch (state) {
            case EMPTY:
                state = STATE.EMPTY;
                activation();

                break;
            case VIEW:
                state = STATE.CHANGE;
                activation();
                break;
            case CHANGE:
                state = STATE.CHANGE;
                activation();
                break;
        }
    }//GEN-LAST:event_textFieldAtXInputMethodTextChanged

    private void textFieldAtXKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldAtXKeyPressed
        switch (state) {
            case EMPTY:
                state = STATE.EMPTY;
                activation();

                break;
            case VIEW:
                state = STATE.CHANGE;
                activation();
                break;
            case CHANGE:
                state = STATE.CHANGE;
                activation();
                break;
        }
    }//GEN-LAST:event_textFieldAtXKeyPressed

    private void radioAtY1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioAtY1MouseClicked
        switch (state) {
            case EMPTY:
                state = STATE.EMPTY;
                activation();

                break;
            case VIEW:
                state = STATE.CHANGE;
                activation();
                break;
            case CHANGE:
                state = STATE.CHANGE;
                activation();
                break;
        }
    }//GEN-LAST:event_radioAtY1MouseClicked

    private void radioAtY2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioAtY2MouseClicked
        switch (state) {
            case EMPTY:
                state = STATE.EMPTY;
                activation();

                break;
            case VIEW:
                state = STATE.CHANGE;
                activation();
                break;
            case CHANGE:
                state = STATE.CHANGE;
                activation();
                break;
        }
    }//GEN-LAST:event_radioAtY2MouseClicked

    private void radioAty3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioAty3MouseClicked
        switch (state) {
            case EMPTY:
                state = STATE.EMPTY;
                activation();

                break;
            case VIEW:
                state = STATE.CHANGE;
                activation();
                break;
            case CHANGE:
                state = STATE.CHANGE;
                activation();
                break;
        }
    }//GEN-LAST:event_radioAty3MouseClicked

    private void checkBoxAtZMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBoxAtZMouseClicked
        switch (state) {
            case EMPTY:
                state = STATE.EMPTY;
                activation();

                break;
            case VIEW:
                state = STATE.CHANGE;
                activation();
                break;
            case CHANGE:
                state = STATE.CHANGE;
                activation();
                break;
        }
    }//GEN-LAST:event_checkBoxAtZMouseClicked

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        switch (state) {
            case EMPTY:
                correct = correct();
                if (correct) {
                    state = STATE.VIEW;
                    activation();
                    add();
                    nbElement = 1;
                } else {
                    // MESSAGE ERREUR
                }
                break;
            case VIEW:
                state = STATE.VIEW;
                activation();
                nbElement++;
                break;
            case CHANGE:
                if (correct) {
                    state = STATE.VIEW;
                    activation();
                    nbElement++;
                }
                break;
        }
    }//GEN-LAST:event_bAddActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        switch (state) {
            case EMPTY:
                throw new RuntimeException("bDelete - EMPTY");
            case VIEW:
                if (nbElement > 1) {
                    state = STATE.VIEW;
                    activation();
                    nbElement--;
                } else if (nbElement == 1) {
                    state = STATE.EMPTY;
                    activation();
                    nbElement = 0;
                }
                break;
            case CHANGE:
                throw new RuntimeException("bDelete - CHANGE");
        }
    }//GEN-LAST:event_bDeleteActionPerformed

    private void bRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRestoreActionPerformed
        switch (state) {
            case EMPTY:
                throw new RuntimeException("bRestore - EMPTY");
            case VIEW:
                throw new RuntimeException("bRestore - VIEW");
            case CHANGE:
                state = STATE.VIEW;
                activation();
                break;
        }
    }//GEN-LAST:event_bRestoreActionPerformed

    private void bReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReplaceActionPerformed
        switch (state) {
            case EMPTY:
                throw new RuntimeException("bReplace - EMPTY");
            case VIEW:
                throw new RuntimeException("bReplace - VIEW");
            case CHANGE:
                if (correct) {
                    state = STATE.VIEW;
                    activation();
                } else {
                    // MESSAGE ERROR
                }
                break;
        }
    }//GEN-LAST:event_bReplaceActionPerformed

    private void lAtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lAtMouseClicked
        switch (state) {
            case EMPTY:
                throw new RuntimeException("lAt - EMPTY");
            case VIEW:
                state = STATE.VIEW;
                activation();
                lbl1.setText(" : " + lAt.getSelectedIndex());
                selectedI = lAt.getSelectedIndex();
            case CHANGE:
                throw new RuntimeException("lAt - CHANGE");
        }
    }//GEN-LAST:event_lAtMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fenetre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup AtY;
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bReplace;
    private javax.swing.JButton bRestore;
    private javax.swing.JCheckBox checkBoxAtZ;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lAt;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lblAtX;
    private javax.swing.JLabel lblAtY;
    private javax.swing.JLabel lblAtZ;
    private javax.swing.JRadioButton radioAtY1;
    private javax.swing.JRadioButton radioAtY2;
    private javax.swing.JRadioButton radioAty3;
    private javax.swing.JTextField textFieldAtX;
    // End of variables declaration//GEN-END:variables
}
